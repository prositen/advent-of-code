import unittest

from python.src.y2020.dec20 import Dec20, Tile


class TestDec20(unittest.TestCase):
    data = ["Tile 2311:",
            "..##.#..#.",
            "##..#.....",
            "#...##..#.",
            "####.#...#",
            "##.##.###.",
            "##...#.###",
            ".#.#.#..##",
            "..#....#..",
            "###...#.#.",
            "..###..###",
            "",
            "Tile 1951:",
            "#.##...##.",
            "#.####...#",
            ".....#..##",
            "#...######",
            ".##.#....#",
            ".###.#####",
            "###.##.##.",
            ".###....#.",
            "..#.#..#.#",
            "#...##.#..",
            "",
            "Tile 1171:",
            "####...##.",
            "#..##.#..#",
            "##.#..#.#.",
            ".###.####.",
            "..###.####",
            ".##....##.",
            ".#...####.",
            "#.##.####.",
            "####..#...",
            ".....##...",
            "",
            "Tile 1427:",
            "###.##.#..",
            ".#..#.##..",
            ".#.##.#..#",
            "#.#.#.##.#",
            "....#...##",
            "...##..##.",
            "...#.#####",
            ".#.####.#.",
            "..#..###.#",
            "..##.#..#.",
            "",
            "Tile 1489:",
            "##.#.#....",
            "..##...#..",
            ".##..##...",
            "..#...#...",
            "#####...#.",
            "#..#.#.#.#",
            "...#.#.#..",
            "##.#...##.",
            "..##.##.##",
            "###.##.#..",
            "",
            "Tile 2473:",
            "#....####.",
            "#..#.##...",
            "#.##..#...",
            "######.#.#",
            ".#...#.#.#",
            ".#########",
            ".###.#..#.",
            "########.#",
            "##...##.#.",
            "..###.#.#.",
            "",
            "Tile 2971:",
            "..#.#....#",
            "#...###...",
            "#.#.###...",
            "##.##..#..",
            ".#####..##",
            ".#..####.#",
            "#..#.#..#.",
            "..####.###",
            "..#.#.###.",
            "...#.#.#.#",
            "",
            "Tile 2729:",
            "...#.#.#.#",
            "####.#....",
            "..#.#.....",
            "....#..#.#",
            ".##..##.#.",
            ".#.####...",
            "####.#.#..",
            "##.####...",
            "##..#.##..",
            "#.##...##.",
            "",
            "Tile 3079:",
            "#.#.#####.",
            ".#..######",
            "..#.......",
            "######....",
            "####.#..#.",
            ".#...#.##.",
            "#.#####.##",
            "..#.###...",
            "..#.......",
            "..#.###..."]

    def test_part_1(self):
        self.assertEqual(20899048083289, Dec20(instructions=self.data).part_1())

    def test_part_2_image(self):
        expected_image = [".#.#..#.##...#.##..#####",
                          "###....#.#....#..#......",
                          "##.##.###.#.#..######...",
                          "###.#####...#.#####.#..#",
                          "##.#....#.##.####...#.##",
                          "...########.#....#####.#",
                          "....#..#...##..#.#.###..",
                          ".####...#..#.....#......",
                          "#..#.##..#..###.#.##....",
                          "#.####..#.####.#.#.###..",
                          "###.#.#...#.######.#..##",
                          "#.####....##..########.#",
                          "##..##.#...#...#.#.#.#..",
                          "...#..#..#.#.##..###.###",
                          ".#.#....#.##.#...###.##.",
                          "###.#...#..#.##.######..",
                          ".#.#.###.##.##.#..#.##..",
                          ".####.###.#...###.#..#.#",
                          "..#.#..#..#.#.#.####.###",
                          "#..####...#.#.#.###.###.",
                          "#####..#####...###....##",
                          "#.##..#..#...#..####...#",
                          ".#.###..##..##..####.##.",
                          "...###...##...#...#..###"]
        result = Dec20(instructions=self.data).grid.form_image()
        for _ in range(2):
            result.flip_x()
            for _ in range(4):
                result.rotate_right()
                if result.image == expected_image:
                    return True

        self.assertTrue(False)

    def test_part_2_roughness(self):
        self.assertEqual(273, Dec20(instructions=self.data).part_2())


class TestTile(unittest.TestCase):
    image = [
        "Tile 1:",
        "12345",
        "6..#7",
        "8.#.9",
        "0###A",
        "BCDEF"
    ]

    def test_flip_image_x(self):
        t = Tile(self.image)
        t.flip_x()
        self.assertEqual(["#..", ".#.", "###"], t.image())
        self.assertEqual(["54321", "1680B", "FEDCB", "579AF"], t.borders)

    def test_rotate(self):
        image = [
            "Tile 1:",
            "+1234+",
            "aABCDe",
            "bEFGHf",
            "cIJKLg",
            "dMNOPh",
            "+5678+"
        ]
        t = Tile(image)
        t.rotate_right()
        self.assertEqual(['MIEA', 'NJFB', 'OKGC', 'PLHD'], t.image())
        self.assertEqual(['+dcba+', '+1234+', '+hgfe+', '+5678+'], t.borders)
